
[APPLICATION DIRECTORIES CONFIGURATIONS]
base_path='/path/to/simple-php-mvc-framework'

[PERSISTENCE GENERAL CONFIGURATION]
; defines which data sources will feed this applicacion
; possibles values
;   sql => relational database
;   nosql => no relational database
;   mixed => both
database.general.source = mixed

[RELATIONAL DATA BASE CONFIGURATIONS]

; values
;   postgresql = pdo_pgsql
;   mysql = pdo_mysql
database.r.driver='relational_db_driver'

database.r.user='relational_db_user'
database.r.password='relational_db_password'
database.r.name='relational_db_name
database.r.host='relational_db_host'

; defaults 
;   mysql = 3306
;   postgresql = 5432
database.r.port='relational_db_port'

[NO RELATIONAL DATA BASE CONFIGURATIONS]
; possible values
;   mongodb | coachdb
database.nr.dbtype='norelational_db_type'

; the list of all database servers
database.nr.defaultdatabase = 'no_relational_default_db'

; the list of all database servers
database.nr.sources[] = 'localhost:27017'

[DEFAULT CONTROLLER]
routing.default_controller=DefaultController
routing.default_action=DefaultAction
routing.url_route_parameter=rt

[AUTHORIZATION CONFIGURATIONS]
; specifies whether the rights restrictions should be excecuted or not
; if true, you should specify the auth.rules_file parameter.
auth.enabled=true
; the file that defines authorizarion rules
auth.rules_file=authRules.php
; action to be taken if the action requested IS NOT allowed
; possibles values are [ redirect_to_login | die ]
; if set to redirect_to_login, then you should specify the auth.login_page parameter
auth.when_not_allowed=redirect_to_login

; page to redirect in case the request the request is not allowed or other internal error happens.
; it is relevant if auth.when_not_allowed=redirect_to_login
auth.login_page=usuario:login

auth.user_roles_table=user_roles_table

[SOAP WEB SERVICES CONFIGURATIONS]
soapwebservices.port=80

[NAMING CONVENTIONS]
;in this section you need to define the naming convention you will use for
;classes in persistence, business and presentation layers. This will be used
;when creating new classes with codegen
; format: <prefix>prefix</prefix>entity-name<suffix>suffix</suffix>

; matches: UserEntity, UserRoleEntity
naming.persistence.entity=<prefix></prefix>entity-name<suffix>Entity</suffix>

; matches: UserDao, UserRoleDao
naming.persistence.dao.interface=<prefix></prefix>entity-name<suffix>Dao</suffix>
; matches: UserDaoImpl, UserRoleDaoImpl
naming.persistence.dao.implementation=<prefix></prefix>entity-name<suffix>DaoImpl</suffix>

; matches: UserBusiness
naming.business.interface=<prefix>I</prefix>entity-name<suffix>Business</suffix>
; matches: IUserBusiness
naming.business.implementation=<prefix></prefix>entity-name<suffix>Business</suffix>

; matches: UserController
naming.controller.implementation=<prefix></prefix>entity-name<suffix>Controller</suffix>
